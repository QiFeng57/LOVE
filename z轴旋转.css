@charset "utf-8";
/* 全局样式重置 */
* {
    margin: 0;
    padding: 0;
}

body {
    /* background: url(preview.png) ; */
    max-width: 100%;
    min-width: 100%;
    height: 100vh;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    position: absolute;
    margin-left: auto;
    margin-right: auto;
}

li {
    list-style: none;
}

.box {
    /* 初始尺寸为视口的一定比例，后续根据图片尺寸动态调整 */
    width: 20vw;
    height: 20vw;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    position: absolute;
    margin-left: 42%;
    margin-top: 22%;
    /* 3D 变换风格，添加标准属性和其他浏览器前缀提高兼容性 */
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(13deg);
    -webkit-transform: rotateX(13deg);
    -moz-transform: rotateX(13deg);
    -ms-transform: rotateX(13deg);
    /* 动画，添加标准属性和其他浏览器前缀提高兼容性 */
    animation: move 5s linear infinite;
    -webkit-animation: move 5s linear infinite;
    -moz-animation: move 5s linear infinite;
    -ms-animation: move 5s linear infinite;
}

.minbox {
    /* 初始尺寸为视口的一定比例，后续根据图片尺寸动态调整 */
    width: 10vw;
    height: 10vw;
    position: absolute;
    left: 5vw;
    top: 3vw;
    /* 3D 变换风格，添加标准属性和其他浏览器前缀提高兼容性 */
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
}

.minbox li {
    /* 初始尺寸为视口的一定比例，后续根据图片尺寸动态调整 */
    width: 10vw;
    height: 10vw;
    position: absolute;
    left: 0;
    top: 0;
}

/* 减少背景图片设置的重复代码 */
.minbox-face {
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
}

.minbox li:nth-child(1) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: translateZ(5vw);
    -webkit-transform: translateZ(5vw);
    -moz-transform: translateZ(5vw);
    -ms-transform: translateZ(5vw);
}

.minbox li:nth-child(2) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(180deg) translateZ(5vw) scaleY(-1) scaleX(-1);
    -webkit-transform: rotateX(180deg) translateZ(5vw) scaleY(-1) scaleX(-1);
    -moz-transform: rotateX(180deg) translateZ(5vw) scaleY(-1) scaleX(-1);
    -ms-transform: rotateX(180deg) translateZ(5vw) scaleY(-1) scaleX(-1);
}

.minbox li:nth-child(3) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(-90deg) translateZ(5vw);
    -webkit-transform: rotateX(-90deg) translateZ(5vw);
    -moz-transform: rotateX(-90deg) translateZ(5vw);
    -ms-transform: rotateX(-90deg) translateZ(5vw);
}

.minbox li:nth-child(4) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(90deg) translateZ(5vw);
    -webkit-transform: rotateX(90deg) translateZ(5vw);
    -moz-transform: rotateX(90deg) translateZ(5vw);
    -ms-transform: rotateX(90deg) translateZ(5vw);
}

.minbox li:nth-child(5) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(-90deg) translateZ(5vw);
    -webkit-transform: rotateY(-90deg) translateZ(5vw);
    -moz-transform: rotateY(-90deg) translateZ(5vw);
    -ms-transform: rotateY(-90deg) translateZ(5vw);
}

.minbox li:nth-child(6) {
    /* 使用类来设置背景图片 */
    background: url(1.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(90deg) translateZ(5vw);
    -webkit-transform: rotateY(90deg) translateZ(5vw);
    -moz-transform: rotateY(90deg) translateZ(5vw);
    -ms-transform: rotateY(90deg) translateZ(5vw);
}

/* 减少背景图片设置的重复代码 */
.maxbox-face {
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
}

.maxbox li {
    /* 初始尺寸为视口的一定比例，后续根据图片尺寸动态调整 */
    width: 20vw;
    height: 20vw;
    background: #fff;
    border: 1px solid #ccc;
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0.2;
    /* 过渡效果，添加标准属性和其他浏览器前缀提高兼容性 */
    transition: all 1s ease;
    -webkit-transition: all 1s ease;
    -moz-transition: all 1s ease;
    -ms-transition: all 1s ease;
}

.maxbox li:nth-child(1) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: translateZ(10vw);
    -webkit-transform: translateZ(10vw);
    -moz-transform: translateZ(10vw);
    -ms-transform: translateZ(10vw);
}

.maxbox li:nth-child(2) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(180deg) translateZ(10vw) scaleY(-1) scaleX(-1);
    -webkit-transform: rotateX(180deg) translateZ(10vw) scaleY(-1) scaleX(-1);
    -moz-transform: rotateX(180deg) translateZ(10vw) scaleY(-1) scaleX(-1);
    -ms-transform: rotateX(180deg) translateZ(10vw) scaleY(-1) scaleX(-1);
}

.maxbox li:nth-child(3) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(-90deg) translateZ(10vw);
    -webkit-transform: rotateX(-90deg) translateZ(10vw);
    -moz-transform: rotateX(-90deg) translateZ(10vw);
    -ms-transform: rotateX(-90deg) translateZ(10vw);
}

.maxbox li:nth-child(4) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(90deg) translateZ(10vw);
    -webkit-transform: rotateX(90deg) translateZ(10vw);
    -moz-transform: rotateX(90deg) translateZ(10vw);
    -ms-transform: rotateX(90deg) translateZ(10vw);
}

.maxbox li:nth-child(5) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(-90deg) translateZ(10vw);
    -webkit-transform: rotateY(-90deg) translateZ(10vw);
    -moz-transform: rotateY(-90deg) translateZ(10vw);
    -ms-transform: rotateY(-90deg) translateZ(10vw);
}

.maxbox li:nth-child(6) {
    /* 使用类来设置背景图片 */
    background: url(01.png) no-repeat 0 0;
    background-size: cover; /* 确保图片覆盖整个元素 */
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(90deg) translateZ(10vw);
    -webkit-transform: rotateY(90deg) translateZ(10vw);
    -moz-transform: rotateY(90deg) translateZ(10vw);
    -ms-transform: rotateY(90deg) translateZ(10vw);
}

.maxbox {
    /* 初始尺寸为视口的一定比例，后续根据图片尺寸动态调整 */
    width: 80vw;
    height: 40vw;
    position: absolute;
    left: 0;
    top: -2vw;
    /* 3D 变换风格，添加标准属性和其他浏览器前缀提高兼容性 */
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
}

.box:hover ol li:nth-child(1) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: translateZ(30vw);
    -webkit-transform: translateZ(30vw);
    -moz-transform: translateZ(30vw);
    -ms-transform: translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

.box:hover ol li:nth-child(2) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(180deg) translateZ(30vw);
    -webkit-transform: rotateX(180deg) translateZ(30vw);
    -moz-transform: rotateX(180deg) translateZ(30vw);
    -ms-transform: rotateX(180deg) translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

.box:hover ol li:nth-child(3) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(-90deg) translateZ(30vw);
    -webkit-transform: rotateX(-90deg) translateZ(30vw);
    -moz-transform: rotateX(-90deg) translateZ(30vw);
    -ms-transform: rotateX(-90deg) translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

.box:hover ol li:nth-child(4) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateX(90deg) translateZ(30vw);
    -webkit-transform: rotateX(90deg) translateZ(30vw);
    -moz-transform: rotateX(90deg) translateZ(30vw);
    -ms-transform: rotateX(90deg) translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

.box:hover ol li:nth-child(5) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(-90deg) translateZ(30vw);
    -webkit-transform: rotateY(-90deg) translateZ(30vw);
    -moz-transform: rotateY(-90deg) translateZ(30vw);
    -ms-transform: rotateY(-90deg) translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

.box:hover ol li:nth-child(6) {
    /* 3D 变换，添加标准属性和其他浏览器前缀提高兼容性 */
    transform: rotateY(90deg) translateZ(30vw);
    -webkit-transform: rotateY(90deg) translateZ(30vw);
    -moz-transform: rotateY(90deg) translateZ(30vw);
    -ms-transform: rotateY(90deg) translateZ(30vw);
    /* 尺寸根据视口调整 */
    width: 40vw;
    height: 40vw;
    opacity: 0.8;
    left: -10vw;
    top: -10vw;
}

/* 动画，添加标准属性和其他浏览器前缀提高兼容性 */
@keyframes move {
    0% {
        transform: rotateX(13deg) rotateY(0deg);
        -webkit-transform: rotateX(13deg) rotateY(0deg);
        -moz-transform: rotateX(13deg) rotateY(0deg);
        -ms-transform: rotateX(13deg) rotateY(0deg);
    }
    100% {
        transform: rotateX(13deg) rotateY(360deg);
        -webkit-transform: rotateX(13deg) rotateY(360deg);
        -moz-transform: rotateX(13deg) rotateY(360deg);
        -ms-transform: rotateX(13deg) rotateY(360deg);
    }
}